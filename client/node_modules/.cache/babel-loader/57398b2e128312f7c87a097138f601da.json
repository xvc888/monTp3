{"ast":null,"code":"var _jsxFileName = \"/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"../src/style/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    state\n  } = useEth();\n  const {\n    contract,\n    accounts\n  } = state;\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n  console.log(contract);\n  const getOwner = useCallback(async () => {\n    const ownerAddress = await contract.methods.owner().call();\n\n    if (ownerAddress === accounts[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, accounts, setIsOwner]); // const getVoter = useCallback(async () => {\n  //   const voter = await contract.methods.Voter().call();\n  // }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n    if (contract) {\n      getOwner(); // getVoter();\n    }\n  }, [getOwner, contract]); //UseEffect\n  // If Ok\n  // setIsOwner(true)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen overflow-auto\",\n    children: [isOwner && /*#__PURE__*/_jsxDEV(Owner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Voter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L5pJpKpvhamMAXAtaEzTj1P2Eyo=\", false, function () {\n  return [useEth];\n});\n\n_c = App;\nexport default App; // 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Owner","Voter","EthProvider","useEth","useEffect","useState","useCallback","App","state","contract","accounts","isOwner","setIsOwner","isVoter","setIsVoter","console","log","getOwner","ownerAddress","methods","owner","call"],"sources":["/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx"],"sourcesContent":["import Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"../src/style/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nfunction App() {\n  const { state } = useEth();\n  const { contract, accounts } = state;\n\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n\n  console.log(contract);\n\n  const getOwner = useCallback(async () => {\n    const ownerAddress = await contract.methods.owner().call();\n    if (ownerAddress === accounts[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, accounts, setIsOwner]);\n\n  // const getVoter = useCallback(async () => {\n  //   const voter = await contract.methods.Voter().call();\n  // }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n\n    if (contract) {\n      getOwner();\n      // getVoter();\n    }\n  }, [getOwner, contract]);\n\n  //UseEffect\n\n  // If Ok\n  // setIsOwner(true)\n\n  return (\n    <div className=\"w-screen h-screen overflow-auto\">\n      {isOwner && <Owner />}\n      <Voter />\n    </div>\n  );\n}\n\nexport default App;\n// 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM;IAAEC;EAAF,IAAYL,MAAM,EAAxB;EACA,MAAM;IAAEM,QAAF;IAAYC;EAAZ,IAAyBF,KAA/B;EAEA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EAEAU,OAAO,CAACC,GAAR,CAAYP,QAAZ;EAEA,MAAMQ,QAAQ,GAAGX,WAAW,CAAC,YAAY;IACvC,MAAMY,YAAY,GAAG,MAAMT,QAAQ,CAACU,OAAT,CAAiBC,KAAjB,GAAyBC,IAAzB,EAA3B;;IACA,IAAIH,YAAY,KAAKR,QAAQ,CAAC,CAAD,CAA7B,EAAkC;MAChCE,UAAU,CAAC,IAAD,CAAV;IACD;EACF,CAL2B,EAKzB,CAACH,QAAD,EAAWC,QAAX,EAAqBE,UAArB,CALyB,CAA5B,CATa,CAgBb;EACA;EACA;;EAEAR,SAAS,CAAC,MAAM;IACd;IAEA,IAAIK,QAAJ,EAAc;MACZQ,QAAQ,GADI,CAEZ;IACD;EACF,CAPQ,EAON,CAACA,QAAD,EAAWR,QAAX,CAPM,CAAT,CApBa,CA6Bb;EAEA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,iCAAf;IAAA,WACGE,OAAO,iBAAI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADd,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAxCQJ,G;UACWJ,M;;;KADXI,G;AA0CT,eAAeA,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}