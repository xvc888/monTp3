{"ast":null,"code":"var _jsxFileName = \"/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"./style/style.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    state\n  } = useEth();\n  const {\n    contract,\n    accounts\n  } = state;\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n  const getProposals = useCallback(async () => {\n    let proposalEvents = await contract.getPastEvents(\"ProposalRegistered\", {\n      fromBlock: 0,\n      toBlock: \"latest\"\n    });\n    console.log(proposalEvents);\n    let proposalsArray = [];\n\n    for (let i = 0; i < proposalEvents.length; i++) {\n      let proposalID = proposalEvents[i].returnValues[0];\n      console.log(i);\n      console.log(proposalID);\n      const res = await contract.methods.getOneProposal(proposalID).call({\n        from: accounts[0]\n      });\n      proposalsArray.push(res);\n    }\n\n    console.log(proposalsArray); //setProposals(proposalArray);\n  }, [contract, accounts]);\n\n  const setProposalRegisteredEvent = async () => {\n    await contract.events.ProposalRegistered().on(\"data\", event => {\n      getProposals();\n    }).on(\"changed\", changed => console.log(changed)).on(\"error\", err => console.log(err)).on(\"connected\", str => console.log(str));\n  };\n\n  const getOwner = useCallback(async () => {\n    //***S'inspirer de getOwner pour faire le getProposals\n    // faire useEffect\n    // Get past events\n    // boucle for\n    // setPropals(proposals)\n    const ownerAddress = await contract.methods.owner().call();\n\n    if (ownerAddress === accounts[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, accounts, setIsOwner]); // const getVoter = useCallback(async () => {\n  //   const voter = await contract.methods.getVoter(accounts[0]).call();\n  // }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n    if (contract) {\n      setProposalRegisteredEvent();\n      getOwner(); // getVoter();\n    }\n  }, [getOwner, contract]); // If Ok\n  // setIsOwner(true)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen overflow-auto\",\n    children: [isOwner && /*#__PURE__*/_jsxDEV(Owner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Voter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"35L7Cm5C13Ee/xHdx6Gj28AFaMk=\", false, function () {\n  return [useEth];\n});\n\n_c = App;\nexport default App; // 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Owner","Voter","EthProvider","useEth","useEffect","useState","useCallback","App","state","contract","accounts","isOwner","setIsOwner","isVoter","setIsVoter","getProposals","proposalEvents","getPastEvents","fromBlock","toBlock","console","log","proposalsArray","i","length","proposalID","returnValues","res","methods","getOneProposal","call","from","push","setProposalRegisteredEvent","events","ProposalRegistered","on","event","changed","err","str","getOwner","ownerAddress","owner"],"sources":["/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx"],"sourcesContent":["import Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"./style/style.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nfunction App() {\n  const { state } = useEth();\n  const { contract, accounts } = state;\n\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n\n  const getProposals = useCallback(async () => {\n    let proposalEvents = await contract.getPastEvents(\"ProposalRegistered\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n    });\n    console.log(proposalEvents);\n    let proposalsArray = [];\n\n    for (let i = 0; i < proposalEvents.length; i++) {\n      let proposalID = proposalEvents[i].returnValues[0];\n      console.log(i);\n      console.log(proposalID);\n      const res = await contract.methods\n        .getOneProposal(proposalID)\n        .call({ from: accounts[0] });\n\n      proposalsArray.push(res);\n    }\n    console.log(proposalsArray);\n    //setProposals(proposalArray);\n  }, [contract, accounts]);\n\n  const setProposalRegisteredEvent = async () => {\n    await contract.events\n      .ProposalRegistered()\n      .on(\"data\", (event) => {\n        getProposals();\n      })\n      .on(\"changed\", (changed) => console.log(changed))\n      .on(\"error\", (err) => console.log(err))\n      .on(\"connected\", (str) => console.log(str));\n  };\n\n  const getOwner = useCallback(async () => {\n    //***S'inspirer de getOwner pour faire le getProposals\n    // faire useEffect\n    // Get past events\n    // boucle for\n    // setPropals(proposals)\n    const ownerAddress = await contract.methods.owner().call();\n    if (ownerAddress === accounts[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, accounts, setIsOwner]);\n\n  // const getVoter = useCallback(async () => {\n  //   const voter = await contract.methods.getVoter(accounts[0]).call();\n  // }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n\n    if (contract) {\n      setProposalRegisteredEvent();\n      getOwner();\n      // getVoter();\n    }\n  }, [getOwner, contract]);\n  // If Ok\n  // setIsOwner(true)\n\n  return (\n    <div className=\"w-screen h-screen overflow-auto\">\n      {isOwner && <Owner />}\n      <Voter />\n    </div>\n  );\n}\n\nexport default App;\n// 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}