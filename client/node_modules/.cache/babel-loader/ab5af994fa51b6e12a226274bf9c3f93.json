{"ast":null,"code":"var _jsxFileName = \"/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"../src/style/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // web3, useEffect()\n  const {\n    contract,\n    account\n  } = useEth();\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n  const getOwner = useCallback(async () => {\n    const ownerAddress = await contract.method.Owner().call();\n    console.log(ownerAddress);\n\n    if (ownerAddress === account[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, account, setIsOwner]);\n  const getVoter = useCallback(async () => {\n    const voter = await contract.method.Voter().call();\n  }, [contract]);\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n    if (contract) {\n      alert(\"jisdjiosq\");\n      getOwner();\n      getVoter();\n    }\n  }, [getOwner, getVoter, contract]); //UseEffect\n  // If Ok\n  // setIsOwner(true)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen overflow-auto\",\n    children: [isOwner && /*#__PURE__*/_jsxDEV(Owner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Voter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ouIrIAvudSUJuofsugCFkNiFHYM=\", false, function () {\n  return [useEth];\n});\n\n_c = App;\nexport default App; // 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Owner","Voter","EthProvider","useEth","useEffect","useState","useCallback","App","contract","account","isOwner","setIsOwner","isVoter","setIsVoter","getOwner","ownerAddress","method","call","console","log","getVoter","voter","alert"],"sources":["/home/xav888/Alyra/Truffle/Tp3/client/src/App.jsx"],"sourcesContent":["import Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"../src/style/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { EthProvider, useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nfunction App() {\n  // web3, useEffect()\n  const { contract, account } = useEth();\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n\n  const getOwner = useCallback(async () => {\n    const ownerAddress = await contract.method.Owner().call();\n    console.log(ownerAddress);\n    if (ownerAddress === account[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, account, setIsOwner]);\n\n  const getVoter = useCallback(async () => {\n    const voter = await contract.method.Voter().call();\n  }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n    if (contract) {\n      alert(\"jisdjiosq\");\n      getOwner();\n      getVoter();\n    }\n  }, [getOwner, getVoter, contract]);\n\n  //UseEffect\n\n  // If Ok\n  // setIsOwner(true)\n\n  return (\n    <div className=\"w-screen h-screen overflow-auto\">\n      {isOwner && <Owner />}\n      <Voter />\n    </div>\n  );\n}\n\nexport default App;\n// 1 useEffect => componentdidMount\n// 2 useEth => getWeb3\n// 3 await Contrat.method..isOwner().call()\n// 4 useState => this.state.owner = true => setIsOwner(true) (const [isOwner, setIsOwner] = useState(false))\n// TODO: Check if owner\n// Query blockchain\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAwBN,MAAM,EAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMS,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,YAAY,GAAG,MAAMP,QAAQ,CAACQ,MAAT,CAAgBhB,KAAhB,GAAwBiB,IAAxB,EAA3B;IACAC,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;IACA,IAAIA,YAAY,KAAKN,OAAO,CAAC,CAAD,CAA5B,EAAiC;MAC/BE,UAAU,CAAC,IAAD,CAAV;IACD;EACF,CAN2B,EAMzB,CAACH,QAAD,EAAWC,OAAX,EAAoBE,UAApB,CANyB,CAA5B;EAQA,MAAMS,QAAQ,GAAGd,WAAW,CAAC,YAAY;IACvC,MAAMe,KAAK,GAAG,MAAMb,QAAQ,CAACQ,MAAT,CAAgBf,KAAhB,GAAwBgB,IAAxB,EAApB;EACD,CAF2B,EAEzB,CAACT,QAAD,CAFyB,CAA5B;EAIAJ,SAAS,CAAC,MAAM;IACd;IACA,IAAII,QAAJ,EAAc;MACZc,KAAK,CAAC,WAAD,CAAL;MACAR,QAAQ;MACRM,QAAQ;IACT;EACF,CAPQ,EAON,CAACN,QAAD,EAAWM,QAAX,EAAqBZ,QAArB,CAPM,CAAT,CAlBa,CA2Bb;EAEA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,iCAAf;IAAA,WACGE,OAAO,iBAAI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADd,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAtCQH,G;UAEuBJ,M;;;KAFvBI,G;AAwCT,eAAeA,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}