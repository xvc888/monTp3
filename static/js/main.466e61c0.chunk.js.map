{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/useEth.js","components/Owner.jsx","components/Voter.jsx","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","App.jsx","index.js"],"names":["EthContext","createContext","useEth","useContext","Owner","voters","getVoters","actualStatus","state","contract","accounts","useState","isWinner","setWinner","address","setAddress","workflowStatus","setWorkflowStatus","useEffect","getUIWorkflowStatus","addVoter","length","methods","send","from","startProposalsRegistering","result","console","log","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","winningProposalID","call","winner","className","map","voter","index","returnValues","voterAddress","type","name","onChange","event","target","value","display","onClick","Voter","proposals","setIsVoter","proposal","setProposal","useCallback","setVote","addProposal","description","voteCount","actions","initialState","artifact","web3","networkID","reducer","action","data","Error","EthProvider","children","useReducer","dispatch","init","Web3","givenProvider","eth","requestAccounts","net","getId","abi","networks","Contract","err","error","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","App","isOwner","setIsOwner","setProposals","setActualStatus","setVoters","getProposals","getPastEvents","fromBlock","toBlock","proposalEvents","proposalsArray","i","proposalID","getOneProposal","res","push","votersEvents","getStatus","setProposalRegisteredEvent","ProposalRegistered","changed","str","setWorkflowEvent","WorkflowStatusChange","newStatus","setCountRefreshEvent","Voted","getOwner","owner","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.466e61c0.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\n\nfunction Owner({ voters, getVoters, actualStatus }) {\n  const { state } = useEth();\n  const { contract, accounts } = state;\n  const [isWinner, setWinner] = useState(\"\");\n  const [address, setAddress] = useState(null);\n  const [workflowStatus, setWorkflowStatus] = useState(\"\");\n\n  //console.log(contract.)\n\n  useEffect(() => {\n    actualStatus && getUIWorkflowStatus();\n  }, [actualStatus]);\n\n  function handleChange(event) {\n    setAddress(event.target.value);\n  }\n\n  const addVoter = async () => {\n    if (address.length === 42) {\n      const result = await contract.methods.addVoter(address).send({\n        from: accounts[0],\n      });\n\n      getVoters();\n    }\n  };\n\n  const startProposalsRegistering = async () => {\n    const result = await contract.methods.startProposalsRegistering().send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const endProposalsRegistering = async () => {\n    const result = await contract.methods.endProposalsRegistering().send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const startVotingSession = async () => {\n    const result = await contract.methods.startVotingSession().send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const endVotingSession = async () => {\n    const result = await contract.methods.endVotingSession().send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const tallyVotes = async () => {\n    await contract.methods.tallyVotes().send({ from: accounts[0] });\n    const winner = await contract.methods\n      .winningProposalID()\n      .call({ from: accounts[0] });\n    setWinner(winner);\n\n    console.log(winner);\n    console.log(contract);\n  };\n\n  const getUIWorkflowStatus = async () => {\n    switch (actualStatus) {\n      case \"0\":\n        setWorkflowStatus(\"RegisteringVoters\");\n        break;\n      case \"1\":\n        setWorkflowStatus(\"ProposalsRegistrationStarted\");\n        break;\n      case \"2\":\n        setWorkflowStatus(\"ProposalsRegistrationEnded\");\n        break;\n      case \"3\":\n        setWorkflowStatus(\"VotingSessionStarted\");\n        break;\n      case \"4\":\n        setWorkflowStatus(\"VotingSessionEnded\");\n        break;\n      case \"5\":\n        setWorkflowStatus(\"VotesTallied\");\n        break;\n      default:\n        setWorkflowStatus(\"Unknown\");\n    }\n  };\n\n  return (\n    <div className=\"wrapDiv\">\n      <div className=\"userAdd\">\n        <h4>Adresse connectée au wallet: {state.accounts}</h4>\n        <h4>\n          Statut actuel du workflow: <h3 className=\"wfs\">{workflowStatus}</h3>\n        </h4>\n      </div>\n      <h3>\n        <strong>Voters</strong>\n      </h3>\n      <ul>\n        {voters.map((voter, index) => (\n          <li>\n            <h3>\n              Addresses: <strong>{voter.returnValues.voterAddress}</strong>\n            </h3>\n          </li>\n        ))}\n      </ul>\n      <div className=\"addVoter\">\n        <br />\n        <h1 className=\"text-2xl\">Add a voter</h1>\n        <br />\n        <h2>Adresse user: </h2>\n        <br />\n        <input type={\"text\"} name=\"addVoter\" onChange={handleChange} />\n        <br />\n        <button display=\"block\" className=\"button\" onClick={addVoter}>\n          Add voter\n        </button>\n        <br />\n      </div>\n      <br />\n      <div className=\"startRegister\">\n        <h1 className=\"text-2xl\">Start registering proposals</h1>\n        <br />\n        <button className=\"button\" onClick={startProposalsRegistering}>\n          Open registering\n        </button>\n      </div>\n      <br />\n      <div className=\"endRegister\">\n        <h1 className=\"text-2xl\">End proposal registering</h1>\n        <br />\n\n        <button className=\"button\" onClick={endProposalsRegistering}>\n          Close registering\n        </button>\n      </div>\n      <div className=\"startVoting\">\n        <h1 className=\"text-2xl\">start Voting session</h1>\n        <br />\n        <button className=\"button\" onClick={startVotingSession}>\n          Start Voting session\n        </button>\n      </div>\n      <div className=\"endVoting\">\n        <h1 className=\"text-2xl\">End voting session</h1>\n        <br />\n        <button className=\"button\" onClick={endVotingSession}>\n          Close registering\n        </button>\n      </div>\n      <div className=\"tallyVotes\">\n        <h1 className=\"text-2xl\">Tally votes</h1>\n        <br />\n        <button className=\"button\" onClick={tallyVotes}>\n          Tally votes\n        </button>\n        <h3>La proposition gagnante est:{isWinner}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Owner;\n","import useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport \"../style/style.css\";\n\nfunction Voter({ proposals }) {\n  const { state } = useEth();\n  const { contract, accounts } = state;\n  const [isVoter, setIsVoter] = useState(false);\n  const [proposal, setProposal] = useState(null);\n\n  const checkIfVoter = useCallback(async () => {\n    const voterAddress = await contract.methods.voter().call();\n    if (voterAddress === accounts[0]) {\n      setIsVoter(true);\n    }\n  }, [contract, accounts, setIsVoter]);\n\n  function handleChange(event) {\n    setProposal(event.target.value);\n  }\n\n  const setVote = async (index) => {\n    const result = await contract.methods.setVote(index).send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const addProposal = async () => {\n    const result = await contract.methods.addProposal(proposal).send({\n      from: accounts[0],\n    });\n    console.log(result);\n  };\n  const getVoter = async () => {\n    const result = await contract.methods.getVoter().call();\n    console.log(result);\n  };\n\n  const getOneProposal = async () => {\n    const result = await contract.methods.getOneProposal().call();\n    //const result2 = await contract.methods.getProposals().call();\n    console.log(result);\n    //console.log(result2);\n  };\n\n  return (\n    <>\n      <div className=\"userAdd\">\n        <h4>Adresse connectée au wallet: {state.accounts}</h4>\n        <h4>Statut actuel du workflow: </h4>\n      </div>\n      <div className=\"addProposal\">\n        <br />\n        <h1 className=\"text-2xl\">Add a proposal</h1>\n        <button display=\"block\" className=\"button\" onClick={addProposal}>\n          <strong>Send</strong>\n        </button>\n        <input\n          className=\"input\"\n          type={\"text\"}\n          name=\"addProposal\"\n          onChange={handleChange}\n        />\n\n        <br />\n      </div>\n\n      <div className=\"setVote\">\n        <br />\n        <h1 className=\"text-2xl\">Choose a proposal</h1>\n        <br />\n        <ul>\n          {proposals.map((proposal, index) => (\n            <li>\n              <h3>\n                Proposition: <strong>{proposal.description}</strong>\n              </h3>\n              <p>\n                <h3>Number of votes: {proposal.voteCount}</h3>\n              </p>\n              <button className=\"voteButton\" onClick={() => setVote(index)}>\n                VOTE here!\n              </button>\n            </li>\n          ))}\n        </ul>\n        <br />\n        <br />\n      </div>\n    </>\n  );\n}\n\nexport default Voter;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(async (artifact) => {\n    if (artifact) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      const networkID = await web3.eth.net.getId();\n      const { abi } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n      dispatch({\n        type: actions.init,\n        data: { artifact, web3, accounts, networkID, contract },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach((e) => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach((e) => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport \"./style/style.css\";\nimport { useEth } from \"./contexts/EthContext\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nfunction App() {\n  const { state } = useEth();\n  const { contract, accounts } = state;\n\n  const [isOwner, setIsOwner] = useState(false);\n  const [proposals, setProposals] = useState([]);\n  const [actualStatus, setActualStatus] = useState([]);\n\n  const [voters, setVoters] = useState([]);\n\n  const getProposals = useCallback(async () => {\n    let proposalEvents = await contract.getPastEvents(\"ProposalRegistered\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n    });\n\n    let proposalsArray = [];\n\n    for (let i = 0; i < proposalEvents.length; i++) {\n      let proposalID = proposalEvents[i].returnValues[0];\n\n      const res = await contract.methods\n        .getOneProposal(proposalID)\n        .call({ from: accounts[0] });\n\n      proposalsArray.push(res);\n    }\n    setProposals(proposalsArray);\n  }, [contract, accounts]);\n\n  const getVoters = useCallback(async () => {\n    const votersEvents = await contract.getPastEvents(\"VoterRegistered\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n    });\n\n    setVoters(votersEvents);\n  }, [contract]);\n\n  const getStatus = useCallback(async () => {\n    const res = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] }); //const result2 = await contract.methods.getProposals().call();\n\n    console.log(res);\n    setActualStatus(res);\n  }, [contract]);\n\n  const setProposalRegisteredEvent = useCallback(async () => {\n    await contract.events\n      .ProposalRegistered()\n      .on(\"data\", (event) => {\n        getProposals();\n      })\n      .on(\"changed\", (changed) => console.log(changed))\n      .on(\"error\", (err) => console.log(err))\n      .on(\"connected\", (str) => console.log(str));\n  }, [getProposals]);\n\n  const setWorkflowEvent = useCallback(async () => {\n    await contract.events\n      .WorkflowStatusChange()\n      .on(\"data\", (event) => {\n        const { newStatus } = event.returnValues;\n        setActualStatus(newStatus);\n      })\n      .on(\"changed\", (changed) => console.log(changed))\n      .on(\"error\", (err) => console.log(err))\n      .on(\"connected\", (str) => console.log(str));\n  }, [getProposals]);\n\n  const setCountRefreshEvent = useCallback(async () => {\n    await contract.events\n      .Voted()\n      .on(\"data\", (event) => {\n        getProposals();\n      })\n      .on(\"changed\", (changed) => console.log(changed))\n      .on(\"error\", (err) => console.log(err))\n      .on(\"connected\", (str) => console.log(str));\n  }, [getProposals]);\n\n  const getOwner = useCallback(async () => {\n    const ownerAddress = await contract.methods.owner().call();\n    if (ownerAddress === accounts[0]) {\n      setIsOwner(true);\n    }\n  }, [contract, accounts, setIsOwner]);\n\n  // const getVoter = useCallback(async () => {\n  //   const voter = await contract.methods.getVoter(accounts[0]).call();\n  // }, [contract]);\n\n  useEffect(() => {\n    // se relance à chaque fois que le contrat change de valeur\n\n    if (contract) {\n      setProposalRegisteredEvent();\n      setCountRefreshEvent();\n      setWorkflowEvent();\n      getOwner();\n      getProposals();\n      getVoters();\n      getStatus();\n    }\n  }, [\n    getOwner,\n    getVoters,\n    contract,\n    setProposalRegisteredEvent,\n    setCountRefreshEvent,\n    getProposals,\n    setWorkflowEvent,\n    getStatus,\n  ]);\n  // If Ok\n  // setIsOwner(true)\n\n  return (\n    <div className=\"w-screen h-screen overflow-auto\">\n      <div className=\"brand\">\n        <h2 className=\"myDap\">My Incredible Dap</h2>\n      </div>\n      {isOwner && (\n        <Owner\n          voters={voters}\n          getVoters={getVoters}\n          actualStatus={actualStatus}\n        />\n      )}\n      <Voter proposals={proposals} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { EthProvider } from \"./contexts/EthContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <EthProvider>\n      <App />\n    </EthProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}